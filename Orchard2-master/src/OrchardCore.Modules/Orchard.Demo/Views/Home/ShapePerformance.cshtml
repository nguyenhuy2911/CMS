@* This page compares the performance of View Components and shapes *@

@using Orchard.DisplayManagement

@{ 
    var iterations = 100;

}
VIEW COMPONENTS
@{
    var sw = new System.Diagnostics.Stopwatch();
    sw.Start();

    var buffer = new Microsoft.AspNetCore.Html.HtmlContentBuilder();
}

@for (int i = 0; i < iterations; i++)
{
    buffer.AppendHtml(await Component.InvokeAsync("Fake", new { value = i.ToString() }));
}

@sw.Elapsed.TotalMilliseconds ms

<br/>
SHAPES (Arguments)

@{
    buffer = new Microsoft.AspNetCore.Html.HtmlContentBuilder();
    sw.Restart();
}

@for (int i = 0; i < iterations; i++)
{
    buffer.AppendHtml(await DisplayAsync(New.Fake(Value: i.ToString())));
}

@sw.Elapsed.TotalMilliseconds ms

<br />
SHAPES (Method call)

@{
    buffer = new Microsoft.AspNetCore.Html.HtmlContentBuilder();
    sw.Restart();
}

@for (int i = 0; i < iterations; i++)
{
    buffer.AppendHtml(await DisplayAsync(New.Fake().Value(i.ToString())));
}

@sw.Elapsed.TotalMilliseconds ms


<br />
SHAPES (Dynamic Proxy)

@{
    buffer = new Microsoft.AspNetCore.Html.HtmlContentBuilder();
    sw.Restart();
}

@for (int i = 0; i < iterations; i++)
{
    var proxy = Factory.Create<Orchard.Demo.Models.FakeShape>("Fake", f => f.Value = "666");
    
    buffer.AppendHtml(await DisplayAsync(proxy));
}

@sw.Elapsed.TotalMilliseconds ms

<br />
SHAPES (Reuse instance)

@{
    buffer = new Microsoft.AspNetCore.Html.HtmlContentBuilder();
    sw.Restart();

    var shape = New.Fake().Value("666");

}

@for (int i = 0; i < iterations; i++)
{
    buffer.AppendHtml(await DisplayAsync(shape));
}

@sw.Elapsed.TotalMilliseconds ms


<br />
SHAPES (Just instantiation)

@{
    buffer = new Microsoft.AspNetCore.Html.HtmlContentBuilder();
    sw.Restart();

}

@for (int i = 0; i < iterations; i++)
{
    shape = New.Fake().Value(i.ToString());
    buffer.AppendHtml("666");
}

@sw.Elapsed.TotalMilliseconds ms

<br />
SHAPES (Cached)

@{
    buffer = new Microsoft.AspNetCore.Html.HtmlContentBuilder();
    sw.Restart();

}

@for (int i = 0; i < iterations; i++)
{
    shape = New.Fake().Value(i.ToString());
    shape.Metadata.Cache("fake");

    buffer.AppendHtml(await DisplayAsync(shape));
}

@sw.Elapsed.TotalMilliseconds ms
